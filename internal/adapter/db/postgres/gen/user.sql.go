// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package gen

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: Create :exec
INSERT INTO users (id, firebase_uuid, email)
VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	ID           uuid.UUID `json:"id"`
	FirebaseUuid string    `json:"firebase_uuid"`
	Email        string    `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser, arg.ID, arg.FirebaseUuid, arg.Email)
	return err
}

const getSecurityImageByEmail = `-- name: GetSecurityImageByEmail :one
SELECT security_image, security_phrase
FROM users
WHERE email = $1
`

type GetSecurityImageByEmailRow struct {
	SecurityImage  pgtype.Text `json:"security_image"`
	SecurityPhrase pgtype.Text `json:"security_phrase"`
}

func (q *Queries) GetSecurityImageByEmail(ctx context.Context, email string) (GetSecurityImageByEmailRow, error) {
	row := q.db.QueryRow(ctx, getSecurityImageByEmail, email)
	var i GetSecurityImageByEmailRow
	err := row.Scan(&i.SecurityImage, &i.SecurityPhrase)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, firebase_uuid, email, security_image, security_phrase
FROM users
WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirebaseUuid,
		&i.Email,
		&i.SecurityImage,
		&i.SecurityPhrase,
	)
	return i, err
}

const saveSecurityImage = `-- name: SaveSecurityImage :exec
UPDATE users
SET security_image = $2,
    security_phrase = $3
WHERE email = $1
`

type SaveSecurityImageParams struct {
	Email          string      `json:"email"`
	SecurityImage  pgtype.Text `json:"security_image"`
	SecurityPhrase pgtype.Text `json:"security_phrase"`
}

func (q *Queries) SaveSecurityImage(ctx context.Context, arg SaveSecurityImageParams) error {
	_, err := q.db.Exec(ctx, saveSecurityImage, arg.Email, arg.SecurityImage, arg.SecurityPhrase)
	return err
}
